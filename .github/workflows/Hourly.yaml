name: Run R Script Hourly

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  run_rscript:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: GitHub Container Registry 로그인
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: R 스크립트 실행 (Docker 컨테이너 내에서)
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/output:/output \
            ghcr.io/${{ github.repository_owner }}/batch-task:test

      - name: Git 설정
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          # GITHUB_TOKEN 사용하여 인증
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: 결과 파일 커밋 및 푸시
        run: |
          OUTPUT_FILE=$(ls -t ./output/output_* 2>/dev/null | head -n1 || true)
          if [ -n "$OUTPUT_FILE" ]; then
            git add "$OUTPUT_FILE"
            git commit -m "Add output file: $OUTPUT_FILE [skip ci]"
            git push origin HEAD:main
          else
            echo "새로운 출력 파일이 없습니다."
          fi

      - name: GitHub Actions의 기본 `GITHUB_TOKEN`이 Read-Only일 경우 대비 (옵션)
        if: failure()
        run: |
          echo "GITHUB_TOKEN으로 push 실패 - PAT(GH_PAT) 사용 시도"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git push origin HEAD:main || echo "PAT로도 push 실패"
